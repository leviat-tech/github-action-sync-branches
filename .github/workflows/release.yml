name: Release

on:
  push:
    branches: [ dev, main, prod ]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set env
        if: github.ref_name != 'prod'
        run: |
          # Check if a PR already exists
          EXISTING_PR=$(gh pr list --head ${{ github.ref_name }} --json number --jq ".[] | .number")
          echo "EXISTING_PR=$EXISTING_PR" >> $GITHUB_ENV
          if [[ -n $EXISTING_PR ]]; then                                                                                    
            echo "Pull request $EXISTING_PR exists. Skipping PR creation step"
          else
            echo "No existing pull requests. A PR will now be automatically created."
          fi
          
          # Check if the last commit is a release commit
          if git log -1 --pretty=%B | grep -q "chore(prod): release"; then
            echo "This is a release and will be deployed to production"
            echo "IS_RELEASE=true" >> $GITHUB_ENV
          fi

      - name: Create PR to main
        if: github.ref_name == 'dev' && env.EXISTING_PR == ''
        run: |
          label="autodeploy: staging"
          gh label create "$label" -c=#201547 -f
          gh pr create \
          --base "main" \
          --head "dev" \
          --title "Deploy to staging" \
          --body "Automated pull request from dev to main. Merge to deploy to staging environment." \
          --label "$label" 

      - name: Create PR to prod
        if: github.ref_name == 'main' && env.EXISTING_PR == ''
        run: |
          label="autorelease: prepare"
          gh label create "$label"  -c=#201547 -f
          gh pr create \
          --base "prod" \
          --head "main" \
          --title "Prepare release" \
          --body "Automated pull request from main to prod. Merging this will trigger the creation/update of a release PR but deployment will not occur until the release PR is merged." \
          --label "$label"

      - name: Create release PR
        if: github.ref_name == 'prod'
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: node
          default-branch: prod
          package-name: action-test

      - name: Deploy
        # Deploy to test/stage on all pushes, but only deploy to prod when a tag is pushed
        if: github.ref_name != 'prod' || env.IS_RELEASE == 'true'
        run: echo deploying to ${{ github.ref_name }}
